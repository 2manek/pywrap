name = "OCP"
input_folder = "/home/adam/anaconda2/envs/cpp-py-bindgen/include/opencascade"
output_folder = "./generated"

include = ["Standard_*.hxx",
           "gp_*.hxx",
           "math_*.hxx",
           "NCollection_*.hxx",
           "TColgp_*.hxx",
           "OSD_*.hxx",
           "Quantity_*.hxx",
           "FSD_*.hxx",
           "MMgt_*.hxx",
           "TCollection_*.hxx",
           "Storage_*.hxx",
           "TColStd_*.hxx",
           "Message_*.hxx",
           "StdFail_*.hxx",
           "TShort_*.hxx",
           "Plugin_*.hxx",
           "Resource_*.hxx",
           "Units_*.hxx",
           "UnitsAPI_*.hxx",           
           "TopLoc_*.hxx",
           "Poly_*.hxx",
           "Precision_*.hxx"]

exclude = ["Standard_Handle.hxx","Standard_Assert.hxx",
           "math_GaussPoints.hxx","NCollection_Shared.hxx","OSD_WNT.hxx"]

exceptions = ["Standard_Failure","Standard_.+Error"]


module_mapping = "lambda x: Path(x).splitpath()[-1].split('.')[0].split('_')[0]"

[Operators]

    "operator*" = ["__mul__","__rmul__"]
    "operator*=" = ["__imul__"]
    "operator/" = ["__truediv__"]
    "operator/=" = ["__itruediv__"]
    "operator+" = ["__add__"]
    "operator+=" = ["__iadd__"]
    "operator-" = ["__sub__"]
    "operator-=" = ["__isub__"]
    "operator^" = ["__pow__"]
    "operator^=" = ["__ipow__"]

[Extras]

    include_pre = "OCP_specific.inc"
    include_post = false
    
[Symbols]

    path = "symbols.dat"

[Modules]

    [Modules.gp]
    
        include_header_pre = false
        exclude_functions = [,]
        exclude_classes = [,] 
        exclude_methods = [,] 
        exclude_typedefs = ["gp_TrsfNLerp",]
        include_header_post = false
        template_specializations = [,]
        
    [Modules.math]
    
        include_header_pre = false
        exclude_functions = [,]
        exclude_classes = [,]
        exclude_methods = [,]
        exclude_typedefs = [,]
        include_header_post = false
        template_specializations = [,]
        
    [Modules.Standard]
    
        include_header_pre = false
        exclude_functions = ["HashCode"]
        exclude_classes = [,]
        exclude_methods = [,]
        exclude_typedefs = [,]
        include_header_post = false
        template_specializations = [,]
        
    [Modules.NCollection]
    
        include_header_pre = false
        exclude_functions = [,]
        exclude_classes = ["NCollection_SeqNode","NCollection_ListNode"]
        exclude_methods = [,]
        exclude_typedefs = [,]
        include_header_post = false
        template_specializations = [,]
        
    [Modules.OSD]
    
        include_header_pre = false
        exclude_functions = ["OSD_OpenStream",]
        exclude_classes = ["OSD_Thread",]
        exclude_methods = ["OSD_SharedLibrary::DlSymb","OSD::RealToCString"]
        exclude_typedefs = [,]
        include_header_post = false
        template_specializations = [,]
        
    [Modules.Storage]
    
        include_header_pre = false
        exclude_functions = [,]
        exclude_classes = [,] 
        exclude_methods = [,] 
        exclude_typedefs = ["Storage_MapOfPers","Storage_MapOfCallBack"]
        include_header_post = false
        template_specializations = [,]
        
    [Modules.TCollection]
    
        include_header_pre = false
        exclude_functions = [,]
        exclude_classes = [,] 
        exclude_methods = ["TCollection_ExtendedString::ToUTF8CString"] 
        exclude_typedefs = [,]
        include_header_post = false
        template_specializations = [,]
        
    [Modules.Message]
    
        include_header_pre = false
        exclude_functions = [,]
        exclude_classes = [,] 
        exclude_methods = [,] 
        exclude_typedefs = [,]
        include_header_post = false
        template_specializations = [,]
        
    [Modules.TColStd]
    
        include_header_pre = false
        exclude_functions = [,]
        exclude_classes = [,] 
        exclude_methods = [,] 
        exclude_typedefs = ["TColStd_DataMapOfIntegerTransient","TColStd_IndexedDataMapOfTransientTransient","TColStd_DataMapOfTransientTransient"]
        include_header_post = false
        template_specializations = [,]
        
    [Modules.Plugin]
    
        include_header_pre = false
        exclude_functions = [,]
        exclude_classes = [,] 
        exclude_methods = [,] 
        exclude_typedefs = ["Plugin_MapOfFunctions",]
        include_header_post = false
        template_specializations = [,]
        
     [Modules.Units]
    
        include_header_pre = false
        exclude_functions = [,]
        exclude_classes = [,] 
        exclude_methods = ["UnitsMethods::RadianToDegree","UnitsMethods::DegreeToRadian","UnitsMethods::MirrorPCurve"] 
        exclude_typedefs = [,]
        include_header_post = false
        template_specializations = [,]