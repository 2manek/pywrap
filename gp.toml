name = "OCP"
input_folder = "/home/adam/anaconda2/envs/cpp-py-bindgen/include/opencascade"
output_folder = "./generated4"

pats = ["{}_*.hxx","{}.hxx"]

modules = ["Standard",
"gp",
"math",
"BVH",
"NCollection",
"TColgp",
"OSD",
"Quantity",
"Storage",
"FSD",
"MMgt",
"TCollection",
"TColStd",
"Message",
"StdFail",
"TShort",
"Plugin",
"Resource",
"Units",
"UnitsAPI",           
"TopLoc",
"Poly",
"Precision",
"Expr",
"ExprIntrp",
"GeomAbs",
"PLib",
"BSplCLib",
"BSplSLib",
"Bnd",
"CSLib",
"Convert",
"ElCLib",
"ElSLib",
"Adaptor2d",
"Geom2d",
"Geom2dAdaptor",
"Geom2dEvaluator",
"LProp",
"Geom2dLProp",
"TColGeom2d",
"Adaptor3d",
"AdvApprox",
"GProp",
"Geom",
"GeomAdaptor",
"GeomEvaluator",
"GeomLProp",
"LProp3d",
"TColGeom",
"TopAbs",
"AdvApp2Var",
"AppCont",
"AppParCurves",
"Approx",
"AppDef",
"BndLib",
"CPnts",
"Extrema",
"FEmTool",
"GC",
"GCE2d",
"GCPnts",
"Geom2dConvert",
"GeomConvert",
"GeomLib",
"GeomProjLib",
"GeomTools",
"Hermit",
"IntAna",
"IntAna2d",
"ProjLib",
"gce",
"TopoDS",
"BRep",
"BRepAdaptor",
"BRepLProp",
"TopTools",
"BRepTools",
"BinTools",
"TopExp",
"AppBlend",
#"ApproxInt",
"FairCurve",
"GccAna",
"GccEnt",
"GccInt",
"Geom2dAPI",
"Geom2dGcc",
"IntRes2d",
"Intf",
"Geom2dInt",
"Geom2dHatch",
"GeomAPI",
"GeomFill",
"GeomInt",
"GeomPlate",
"Hatch",
"HatchGen",
"IntCurve",
"IntCurveSurface",
"IntImp",
"IntImpParGen",
"IntPatch",
"IntPolyh",
"IntStart",
"IntSurf",
#"IntWalk",
"Law",
"LocalAnalysis",
"NLPlate",
"Plate",
"TopClass",
"TopTrans",
"BRepApprox",
"BRepBndLib",
"BRepBuilderAPI",
"BRepCheck",
"BRepClass",
"BRepClass3d",
"BRepExtrema",
"BRepGProp",
"BRepIntCurveSurface",
"BRepLib",
"BRepMAT2d",
"BRepTopAdaptor",
"Bisector",
"IntCurvesFace",
"MAT",
"MAT2d",
"BRepPrim",
"BRepPrimAPI",
"BRepSweep",
"Sweep",
"ShapeAlgo",
"ShapeAnalysis",
"ShapeBuild",
"ShapeConstruct",
"ShapeCustom",
"ShapeExtend",
"ShapeFix",
"ShapeProcess",
"ShapeProcessAPI",
"ShapeUpgrade",
"Contap",
"HLRAlgo",
"HLRAppli",
"HLRBRep",
"HLRTopoBRep",
"Intrv",
"TopBas",
"TopCnx",
"BRepMesh",
"XBRepMesh",
"BOPAlgo",
"BOPDS",
"BOPTools",
"BRepAlgoAPI",
"IntTools",
"BRepAlgo",
"BRepFill",
"BRepProj",
"TopOpeBRep",
"TopOpeBRepBuild",
"TopOpeBRepDS",
"TopOpeBRepTool",
"BRepFeat",
"LocOpe",
"Blend",
"BRepBlend",
"BRepFilletAPI",
"BlendFunc",
"ChFi2d",
"ChFi3d",
"ChFiDS",
#"ChFiKPart",
"FilletSurf",
"BRepOffset",
"BRepOffsetAPI",
"BiTgte",
"Draft",
"Aspect",
#"Cocoa",
"Font",
"Image",
"InterfaceGraphic",
"SelectBasics",
#"TColQuantity",
#"WNT",
"Xw",
"Graphic3d",
"Prs3d",
"PrsMgr",
"SelectMgr",
"AIS",
"DsgPrs",
"Select3D",
"StdPrs",
"StdSelect",
"V3d",
"OpenGl",
"MeshVS",
"NIS",
"Voxel"
]

exclude = ["Standard_Handle.hxx","Standard",
           "math_GaussPoints.hxx","NCollection_Shared.hxx","OSD_WNT.hxx",
           "Geom2dToIGES","BRepGProp_Gauss.hxx","BRepLib_CheckCurveOnSurface.hxx",
           "BVH_Types.hxx","BVH_RadixSorter.hxx"]

exceptions = ["Standard_Failure"]


module_mapping = "lambda x: Path(x).splitpath()[-1].split('.')[0].split('_')[0]"

[Operators]

    "operator*" = ["__mul__","__rmul__"]
    "operator*=" = ["__imul__"]
    "operator/" = ["__truediv__"]
    "operator/=" = ["__itruediv__"]
    "operator+" = ["__add__"]
    "operator+=" = ["__iadd__"]
    "operator-" = ["__sub__"]
    "operator-=" = ["__isub__"]
    "operator^" = ["__pow__"]
    "operator^=" = ["__ipow__"]

[Extras]

    include_pre = "OCP_specific.inc"
    
[Symbols]

    path = "symbols.dat"
    path_mangled = "symbols_mangled.dat"

[Modules]

    [Modules.gp]
    
        exclude_typedefs = ["gp",]
        
    [Modules.Standard]
    
        exclude_functions = ["HashCode"]
        
    [Modules.Resource]
    
        exclude_classes = ["Resource_NoSuchResource",]
        
    [Modules.NCollection]
    
        include_body_pre = "const size_t DefaultBlockSize = 24600;"
        exclude_classes = ["NCollection","NCollection_ListNode"]
        
    [Modules.OSD]
    
        exclude_functions = ["OSD","OSD_OpenStream"]
        exclude_classes = ["OSD",]
        exclude_methods = ["OSD::RealToCString","OSD_SharedLibrary::DlSymb"]
        
    [Modules.Storage]
    
        exclude_classes = ["Storage_StreamExtCharParityError","Storage_StreamTypeMismatchError","Storage_StreamUnknownTypeError"] 
        exclude_typedefs = ["Storage","Storage_MapOfCallBack","Storage_MapOfPers"]
        
    [Modules.TCollection]
    
        exclude_methods = ["TCollection_ExtendedString::ToUTF8CString"] 
        
    [Modules.TColStd]
    
        exclude_typedefs = ["TColStd_DataMapOfIntegerTransient","TColStd","TColStd_DataMapOfTransientTransient","TColStd_IndexedDataMapOfTransientTransient"]
        
    [Modules.Plugin]
    
        exclude_typedefs = ["Plugin","Plugin_MapOfFunctions"]
        
    [Modules.Units]
    
        exclude_methods = ["UnitsMethods::RadianToDegree","UnitsMethods::DegreeToRadian","UnitsMethods::MirrorPCurve"] 
        
    [Modules.Poly]
    
        exclude_classes = ["Poly_MakeLoops","Poly",]
        exclude_methods = ["Poly_CoherentTriangulation::FindTriangle","Poly_CoherentTriangulation::RemoveDegenerated"]         
        
    [Modules.Expr]
    
        exclude_classes = ["ExprIntrp",]
        
    [Modules.BSplCLib]
    
        exclude_methods = ["BSplCLib::DN",] 

        
    [Modules.TopoDS]
    
        exclude_typedefs = ["TopoDS_ListOfShape"]
       
    [Modules.IntPolyh]
    
        exclude_typedefs = ["IntPolyh_ArrayOfEdges","IntPolyh_ArrayOfTriangles","IntPolyh_ArrayOfPointNormal","IntPolyh_ArrayOfSectionLines","IntPolyh","IntPolyh_ArrayOfTangentZones","IntPolyh_ArrayOfPoints"]
    
    [Modules.BRepBuilderAPI]
    
        exclude_typedefs = ["BRepBuilderAPI_CellFilter","BRepBuilderAPI_BndBoxTree"]
         exclude_methods = ["BRepBuilderAPI_FastSewing::GetStatuses"]

    
    [Modules.MAT2d]
    
        exclude_typedefs = ["MAT2d_DataMapOfIntegerConnexion"]
        
    [Modules.BRepExtrema]
    
        exclude_typedefs = ["BRepExtrema_MapOfIntegerPackedMapOfInteger"]
        
     [Modules.MAT]
    
        exclude_typedefs = ["MAT_DataMapOfIntegerBisector","MAT_DataMapOfIntegerArc","MAT","MAT_DataMapOfIntegerNode","MAT_DataMapOfIntegerBasicElt"]
        
    [Modules.BRepCheck]
    
        exclude_typedefs = ["BRepCheck_DataMapOfShapeResult"]
        
    [Modules.BRepClass3d]
    
        exclude_typedefs = ["BRepClass3d_BndBoxTree"]
    
    [Modules.BRepAlgo]
    
        exclude_typedefs = ["BRepAlgo_DataMapOfShapeInterference"]
    
    [Modules.HLRBRep]
    
        exclude_classes = ["HLRBRep_CLPropsATool",] 
    
    [Modules.TopOpeBRepDS]
    
        exclude_functions = ["FDSSDM_s1s2makesordor","FUN_scanloi"]
        exclude_typedefs = ["TopOpeBRepDS_ShapeSurface"]
        
    [Modules.BRepAlgoAPI]
    
        include_header_pre = "#include <BOPAlgo_Builder.hxx>"
        exclude_methods = ["BRepAlgoAPI_BuilderAlgo::Builder",] #this will be fixed by the include
        exclude_typedefs = ["TopOpeBRepDS_ShapeSurface"]

        
    [Modules.TopOpeBRep]
    
        exclude_methods = ["TopOpeBRep_DSFiller::PShapeClassifier","TopOpeBRep_FaceEdgeFiller::PShapeClassifier","TopOpeBRep_FacesFiller::PShapeClassifier"]
        exclude_typedefs = ["TopOpeBRep_DataMapOfTopolTool"]

    
    [Modules.BRepFill]
    
        exclude_typedefs = ["BRepFill_DataMapOfShapeHArray2OfShape"]
        
     [Modules.ChFi3d]
     #error: invalid use of incomplete type ‘class Geom_BSplineCurve’
        exclude_functions = ["ChFi3d_ApproxByC2","ChFi3d_SearchPivot","ChFi3d_EnlargeFace"]

    
    [Modules.BOPDS]
    
        exclude_typedefs = ["BOPDS_DataMapOfPaveBlockCommonBlock"]
        
    [Modules.BRepMesh]
    
        exclude_classes = ["BRepMesh_Triangle",] #constructor with int&[3]
        exclude_methods = ["BRepMesh_GeomTool::IntLinLin","BRepMesh_DataStructureOfDelaun::ElementNodes"]
                
    [Modules.TopOpeBRepTool]
    
        exclude_typedefs = ["TopOpeBRepTool_IndexedDataMapOfSolidClassifier"]
    
    [Modules.BOPTools]
    
        exclude_typedefs = ["BOPTools_BoxBndTree"]
        
    [Modules.Aspect]
    
        include_header_pre = "struct __GLXFBConfigRec {};"
        exclude_methods = ["Aspect_NeutralWindow::NativeFBConfig","Aspect_Window::NativeFBConfig","Aspect_NeutralWindow::SetNativeHandles","Aspect_DisplayConnection::GetDisplay"]

        
    [Modules.SelectMgr]
    
        exclude_typedefs = ["SelectMgr_IndexedMapOfOwner","SelectMgr_MapOfObjectSensitives","SelectMgr_FrustumCache","SelectMgr_IndexedMapOfHSensitive"]
        
    [Modules.OpenGl]
    
        include_header_pre = "#include <Message_Messenger.hxx>"
        exclude_typedefs = ["OpenGl_SequenceOfLayers","OpenGl_SetterList","OpenGl_MapOfHatchStylesAndIds","OpenGl_MapOfZLayerSettings","OpenGl_IndexedMapOfStructure","OpenGl_MapOfShaderPrograms","OpenGl_IndexedMapOfStructure"]
    
    [Modules.StdSelect]
    
        exclude_typedefs = ["StdSelect_IndexedDataMapOfOwnerPrs"]
        
    [Modules.Xw]
    
        include_header_pre = "struct __GLXFBConfigRec {};"
        include_body_pre = 'py::class_<__GLXFBConfigRec>(m, "__GLXFBConfigRec");'
        
    [Modules.MeshVS]
    
        exclude_typedefs = ["MeshVS_NodePair","MeshVS_DataMapOfIntegerOwner","MeshVS_DataMapOfHArray1OfSequenceOfInteger","MeshVS_DataMapOfIntegerMeshEntityOwner"]
        
    [Modules.AIS]
    
        include_body_pre = "auto OptionsForAttach = [](){return AIS_Manipulator::OptionsForAttach();};"
        exclude_typedefs = ["AIS_DataMapOfShapeDrawer","AIS_DataMapOfIOStatus","AIS_DataMapOfILC","AIS_IndexedDataMapOfOwnerPrs"]
    
    [Modules.Font]
    
        include_header_pre = "struct FT_LibraryRec_ {};"

    [Modules.Select3D]
    
        exclude_typedefs = ["Select3D_IndexedMapOfEntity","Graphic3d_Vec3d","Select3D_BndBox3d"]  #couldn't deduce template parameter ‘Hasher’

    
    [Modules.Graphic3d]
    
        exclude_typedefs = ["Graphic3d_IndexedMapOfView","Graphic3d_IndexedMapOfAddress","Graphic3d_MapOfStructure","Graphic3d_NMapOfTransient","Graphic3d_MapOfObject","Graphic3d_Vec4u","Graphic3d_Vec2u","Graphic3d_Vec3u","Graphic3d_Vec3d"]
        
    [Modules.AdvApprox]
    
        exclude_methods = ['AdvApprox_EvaluatorFunction::Evaluate']
        
    [Modules.BVH]
    
        exclude_typedefs = ["BVH_PrimitiveSet3d"]